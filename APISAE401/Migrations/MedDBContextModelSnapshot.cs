// <auto-generated />
using System;
using APISAE401.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace APISAE401.Migrations
{
    [DbContext(typeof(MedDBContext))]
    partial class MedDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdActivite"));

                    b.Property<int>("AgeMinActivite")
                        .HasColumnType("integer")
                        .HasColumnName("act_agemin");

                    b.Property<string>("DescriptionActivite")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_description");

                    b.Property<string>("DureeActivite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_duree");

                    b.Property<string>("FrequenceActivite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_frequence");

                    b.Property<int>("IdTrancheAge")
                        .HasColumnType("integer")
                        .HasColumnName("tra_id");

                    b.Property<int>("IdTypeActivite")
                        .HasColumnType("integer")
                        .HasColumnName("tat_id");

                    b.Property<string>("TitreActivite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_titre");

                    b.HasKey("IdActivite")
                        .HasName("pk_activite");

                    b.HasIndex("IdTrancheAge");

                    b.HasIndex("IdTypeActivite");

                    b.ToTable("t_e_activite_act");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.APourPf", b =>
                {
                    b.Property<int>("IdPointFort")
                        .HasColumnType("integer")
                        .HasColumnName("ptf_id");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.HasKey("IdPointFort", "IdTypeChambre")
                        .HasName("pk_APourpf");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_j_apourpf_apf");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.APourSousLoc", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdSousLocalisation")
                        .HasColumnType("integer")
                        .HasColumnName("slo_id");

                    b.HasKey("IdClub", "IdSousLocalisation")
                        .HasName("pk_APourSousLoc");

                    b.HasIndex("IdSousLocalisation");

                    b.ToTable("t_j_apourloc_alc");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Appartient", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdDommaineSkiable")
                        .HasColumnType("integer")
                        .HasColumnName("skb_id");

                    b.Property<double>("altitudeClub")
                        .HasColumnType("double precision")
                        .HasColumnName("ape_altitude");

                    b.HasKey("IdClub", "IdDommaineSkiable")
                        .HasName("pk_appartient");

                    b.HasIndex("IdDommaineSkiable");

                    b.ToTable("t_j_appartient_ape");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Avi", b =>
                {
                    b.Property<int>("IdAvi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAvi"));

                    b.Property<string>("CommentaireAvi")
                        .HasColumnType("text")
                        .HasColumnName("avi_commentaire");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clu_id");

                    b.Property<int>("NoteAvi")
                        .HasColumnType("integer")
                        .HasColumnName("avi_note");

                    b.Property<string>("TitreAvi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("avi_titre");

                    b.HasKey("IdAvi")
                        .HasName("pk_avi");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.ToTable("t_e_avi_avi");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.AvoirComme", b =>
                {
                    b.Property<int>("IdServiceCommodite")
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.HasKey("IdServiceCommodite", "IdTypeChambre")
                        .HasName("pk_avoircomme");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_j_avoircomme_ace");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Bar", b =>
                {
                    b.Property<int>("IdBar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bar_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBar"));

                    b.Property<string>("DescriptionBar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bar_description");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<string>("NomBar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bar_nom");

                    b.HasKey("IdBar")
                        .HasName("pk_bar");

                    b.HasIndex("IdBar")
                        .IsUnique();

                    b.HasIndex("IdClub");

                    b.ToTable("t_e_bar_bar");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Calendrier", b =>
                {
                    b.Property<DateTime>("DateCal")
                        .HasColumnType("date")
                        .HasColumnName("cld_date");

                    b.HasKey("DateCal")
                        .HasName("pk_calendrier");

                    b.ToTable("t_e_calendrier_cal");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("IdCarteBancaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cc_idcartebancaire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCarteBancaire"));

                    b.Property<DateTime>("DateExpirationCB")
                        .HasColumnType("date")
                        .HasColumnName("cc_dateexpirationcb");

                    b.Property<string>("NumeroCB")
                        .HasMaxLength(16)
                        .HasColumnType("char(16)")
                        .HasColumnName("cc_numerocb");

                    b.HasKey("IdCarteBancaire")
                        .HasName("pk_cartebancaire");

                    b.ToTable("t_e_cartebancaire_cc");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdClient"));

                    b.Property<string>("AdresseClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_adresse");

                    b.Property<string>("CodePostalClient")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("clt_cp");

                    b.Property<DateTime>("DateNaissanceClient")
                        .HasColumnType("date")
                        .HasColumnName("clt_datenaissance");

                    b.Property<string>("GenreClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_genre");

                    b.Property<int>("IdTypeClient")
                        .HasColumnType("integer")
                        .HasColumnName("fk_tpc_idtypeclient");

                    b.Property<string>("LoginClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_login");

                    b.Property<string>("MailClient")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clt_mail");

                    b.Property<string>("NomClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_nom");

                    b.Property<string>("PasswordClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_pwd");

                    b.Property<string>("PaysClient")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_pays");

                    b.Property<string>("PrenomClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_prenom");

                    b.Property<string>("TelClient")
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_tel");

                    b.Property<string>("VilleClient")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("clt_ville");

                    b.HasKey("IdClient")
                        .HasName("pk_client");

                    b.HasIndex("IdTypeClient");

                    b.HasIndex("LoginClient")
                        .IsUnique();

                    b.HasIndex("MailClient")
                        .IsUnique();

                    b.ToTable("t_e_client_clt");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("IdClub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdClub"));

                    b.Property<string>("AdresseClub")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clb_adresse");

                    b.Property<string>("DescriptionClub")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clb_description");

                    b.Property<double>("LatitudeLocalisationClub")
                        .HasMaxLength(10)
                        .HasColumnType("double precision")
                        .HasColumnName("clb_longitude");

                    b.Property<double>("LongitudeLocalisationClub")
                        .HasMaxLength(10)
                        .HasColumnType("double precision")
                        .HasColumnName("clb_latitude");

                    b.Property<string>("MailClub")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clb_mail");

                    b.Property<string>("NomClub")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_nom");

                    b.Property<string>("TelClub")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("clb_tel");

                    b.HasKey("IdClub")
                        .HasName("pk_club");

                    b.HasIndex("IdClub")
                        .IsUnique();

                    b.ToTable("t_e_club_clb");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Commodite", b =>
                {
                    b.Property<int>("IdCommodite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCommodite"));

                    b.Property<string>("TypeCommodite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cmd_type");

                    b.HasKey("IdCommodite")
                        .HasName("pk_commodite");

                    b.HasIndex("IdCommodite")
                        .IsUnique();

                    b.ToTable("t_e_commodite_cmd");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Comptabiliser", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.Property<int>("NbChambre")
                        .HasColumnType("integer")
                        .HasColumnName("cpt_nbchambre");

                    b.HasKey("IdClub", "IdTypeChambre")
                        .HasName("pk_comptabiliser");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_j_comptabiliser_cpt");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Deplacer", b =>
                {
                    b.Property<int>("IdTransport")
                        .HasColumnType("integer")
                        .HasColumnName("tsp_id");

                    b.Property<int>("IdReservation")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_idreservation");

                    b.Property<string>("DeplacerLieu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("dcp_lieu");

                    b.Property<int>("DeplacerMontant")
                        .HasColumnType("integer")
                        .HasColumnName("dcp_montant");

                    b.HasKey("IdTransport", "IdReservation")
                        .HasName("pk_deplacer");

                    b.HasIndex("IdReservation");

                    b.ToTable("t_j_deplacer_dpc");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.DesirReserve", b =>
                {
                    b.Property<int>("IdReservation")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_idreservation");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.Property<string>("NbParticipants")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char(3)")
                        .HasColumnName("drv_nbparticipants");

                    b.HasKey("IdReservation", "IdTypeChambre")
                        .HasName("pk_desirereserver");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_j_desirreserver_drv");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Detient", b =>
                {
                    b.Property<int>("IdCarteBancaire")
                        .HasColumnType("integer")
                        .HasColumnName("cc_id");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.HasKey("IdCarteBancaire", "IdClient")
                        .HasName("pk_detient");

                    b.HasIndex("IdClient");

                    b.ToTable("t_j_detient_dtn");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Disposer", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdTypeClub")
                        .HasColumnType("integer")
                        .HasColumnName("tcp_id");

                    b.HasKey("IdClub", "IdTypeClub")
                        .HasName("pk_disposer");

                    b.HasIndex("IdClub")
                        .IsUnique();

                    b.HasIndex("IdTypeClub")
                        .IsUnique();

                    b.ToTable("t_j_disposer_dps");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Property<int>("IdDomaineSkiable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("skb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDomaineSkiable"));

                    b.Property<string>("AltitudeDomaineSkiable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("skb_altitude");

                    b.Property<string>("DescriptionDomaineSkiable")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("skb_descritpion");

                    b.Property<double>("LongueurPisteDomaineSkiable")
                        .HasMaxLength(50)
                        .HasColumnType("double precision")
                        .HasColumnName("skb_longueurpiste");

                    b.Property<string>("NbPistesDomaineSkiable")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("skb_nbpistes");

                    b.Property<string>("NomDomaineSkiable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("skb_nom");

                    b.Property<string>("TitreDomaineSkiable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("skb_titre");

                    b.HasKey("IdDomaineSkiable")
                        .HasName("pk_domaineskiable");

                    b.HasIndex("IdDomaineSkiable")
                        .IsUnique();

                    b.ToTable("t_e_domaineskiable_skb");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Localisation", b =>
                {
                    b.Property<int>("IdLocalisation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("loc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLocalisation"));

                    b.Property<string>("LocalisationNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("loc_nom");

                    b.HasKey("IdLocalisation")
                        .HasName("pk_localisation");

                    b.ToTable("t_e_localisation_loc");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Participant", b =>
                {
                    b.Property<int>("IdParticipant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pta_idparticipant");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdParticipant"));

                    b.Property<DateTime>("DateNaissanceParticipant")
                        .HasColumnType("date")
                        .HasColumnName("pta_datenaissance");

                    b.Property<string>("GenreParticipant")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("pta_genre");

                    b.Property<string>("NomParticipant")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("pta_nom");

                    b.Property<string>("PrenomParticipant")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("pta_prenom");

                    b.HasKey("IdParticipant")
                        .HasName("pk_participant");

                    b.ToTable("t_e_participant_pta");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Participer", b =>
                {
                    b.Property<int>("IdParticipant")
                        .HasColumnType("integer")
                        .HasColumnName("pte_idparticipant");

                    b.Property<int>("IdReservation")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_idreservation");

                    b.HasKey("IdParticipant", "IdReservation")
                        .HasName("pk_participer");

                    b.HasIndex("IdReservation");

                    b.ToTable("t_j_participer_pte");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("IdPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPhoto"));

                    b.Property<int>("IdBar")
                        .HasColumnType("integer")
                        .HasColumnName("bar_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdDomaineSkiable")
                        .HasColumnType("integer")
                        .HasColumnName("skb_id");

                    b.Property<int>("IdRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("rsn_id");

                    b.Property<int>("IdTypeActivite")
                        .HasColumnType("integer")
                        .HasColumnName("tat_id");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.Property<string>("Urlphoto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pht_url");

                    b.HasKey("IdPhoto")
                        .HasName("pk_photo");

                    b.HasIndex("IdBar");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdDomaineSkiable");

                    b.HasIndex("IdPhoto")
                        .IsUnique();

                    b.HasIndex("IdRestaurant");

                    b.HasIndex("IdTypeActivite");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_e_photo_pht");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.PointFort", b =>
                {
                    b.Property<int>("IdPointFort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ptf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPointFort"));

                    b.Property<string>("NomPointFort")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("ptf_nom");

                    b.HasKey("IdPointFort")
                        .HasName("pk_pointfort");

                    b.HasIndex("IdPointFort")
                        .IsUnique();

                    b.ToTable("t_e_pointfort_ptf");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Pouvoir", b =>
                {
                    b.Property<int>("IdReservation")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_idreservation");

                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    b.Property<double>("PrixMin")
                        .HasColumnType("double precision")
                        .HasColumnName("pou_prixmin");

                    b.HasKey("IdReservation", "IdActivite")
                        .HasName("pk_pouvoir");

                    b.HasIndex("IdActivite");

                    b.ToTable("t_j_pouvoir_pou");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Proposer", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    b.HasKey("IdClub", "IdActivite")
                        .HasName("pk_proposer");

                    b.HasIndex("IdActivite");

                    b.ToTable("t_j_proposer_pro");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Regroupement", b =>
                {
                    b.Property<int>("RegroupementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rgt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegroupementId"));

                    b.Property<string>("RegroupementNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rgt_nom");

                    b.HasKey("RegroupementId")
                        .HasName("pk_regroupement");

                    b.ToTable("t_e_regroupement_rgt");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Regrouper", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("RegroupementId")
                        .HasColumnType("integer")
                        .HasColumnName("rgt_id");

                    b.HasKey("IdClub", "RegroupementId")
                        .HasName("pk_regrouper");

                    b.HasIndex("RegroupementId");

                    b.ToTable("t_j_regrouper_rgr");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Reponse", b =>
                {
                    b.Property<int>("IdReponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rps_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReponse"));

                    b.Property<string>("CommentaireReponse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rps_commentaire");

                    b.Property<int>("IdAvis")
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<string>("TitreReponse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rps_titre");

                    b.HasKey("IdReponse")
                        .HasName("pk_reponse");

                    b.HasIndex("IdAvis");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdReponse")
                        .IsUnique();

                    b.ToTable("t_e_reponse_rps");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rsv_idreservation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReservation"));

                    b.Property<DateTime>("DateDebutCalendrier")
                        .HasColumnType("date")
                        .HasColumnName("cld_datedebut");

                    b.Property<DateTime>("DateFinCalendrier")
                        .HasColumnType("date")
                        .HasColumnName("cld_datefin");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("date")
                        .HasColumnName("rsv_datereservation");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<decimal>("Montant")
                        .HasColumnType("numeric")
                        .HasColumnName("rsv_montant");

                    b.HasKey("IdReservation")
                        .HasName("pk_reservation");

                    b.HasIndex("DateDebutCalendrier");

                    b.HasIndex("DateFinCalendrier");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.ToTable("t_e_reservation_rsv");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Restaurant", b =>
                {
                    b.Property<int>("IdRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rsn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRestaurant"));

                    b.Property<string>("DescriptionRestaurant")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rsn_description");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<string>("NomRestaurant")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rsn_nom");

                    b.HasKey("IdRestaurant")
                        .HasName("pk_restaurant");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdRestaurant")
                        .IsUnique();

                    b.ToTable("t_e_restaurant_rsn");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.ServiceCommodite", b =>
                {
                    b.Property<int>("IdServiceCommodite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sct_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServiceCommodite"));

                    b.Property<int>("IdCommodite")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.Property<string>("NomServiceCommodite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sct_nom");

                    b.HasKey("IdServiceCommodite")
                        .HasName("pk_servicecommodite");

                    b.HasIndex("IdCommodite");

                    b.HasIndex("IdServiceCommodite")
                        .IsUnique();

                    b.ToTable("t_e_servicecommodite_sct");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Signalement", b =>
                {
                    b.Property<int>("IdSignalement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sig_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSignalement"));

                    b.Property<string>("DescriptionSignalement")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sig_description");

                    b.Property<int>("IdAvis")
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clu_id");

                    b.Property<int>("IdTypeSignalement")
                        .HasColumnType("integer")
                        .HasColumnName("tsi_id");

                    b.HasKey("IdSignalement")
                        .HasName("pk_signalement");

                    b.HasIndex("IdAvis");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdTypeSignalement");

                    b.ToTable("t_e_signalement_sig");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.SousLocalisation", b =>
                {
                    b.Property<int>("IdSousLocalisation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("slo_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSousLocalisation"));

                    b.Property<int>("IdLocalisation")
                        .HasColumnType("integer")
                        .HasColumnName("loc_id");

                    b.Property<string>("NomSousLocalisation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("slo_nom");

                    b.Property<int>("loc_id")
                        .HasColumnType("integer")
                        .HasColumnName("loc_id1");

                    b.HasKey("IdSousLocalisation")
                        .HasName("pk_souslocalisation");

                    b.HasIndex("loc_id");

                    b.ToTable("t_e_souslocalisation_slo");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Tarif", b =>
                {
                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<DateTime>("DateCal")
                        .HasColumnType("date")
                        .HasColumnName("cld_date");

                    b.Property<int>("Prix")
                        .HasColumnType("integer")
                        .HasColumnName("trf_prix");

                    b.HasKey("IdTypeChambre", "IdClub", "DateCal")
                        .HasName("pk_tarif");

                    b.HasIndex("DateCal");

                    b.HasIndex("IdClub");

                    b.ToTable("t_j_tarif_trf");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TrancheAge", b =>
                {
                    b.Property<int>("IdTrancheAge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tra_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTrancheAge"));

                    b.Property<string>("DetailTrancheAge")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tra_detail");

                    b.HasKey("IdTrancheAge")
                        .HasName("pk_trancheage");

                    b.ToTable("t_e_trancheage_tra");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Transport", b =>
                {
                    b.Property<int>("IdTransport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tsp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTransport"));

                    b.Property<string>("TransportNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tsp_nom");

                    b.HasKey("IdTransport")
                        .HasName("pk_transport");

                    b.ToTable("t_e_transport_tsp");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Property<int>("IdTypeActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeActivite"));

                    b.Property<string>("DescriptionTypeActivite")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tat_description");

                    b.Property<string>("NomTypeActivite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tat_nom");

                    b.HasKey("IdTypeActivite")
                        .HasName("pk_typeactivite");

                    b.HasIndex("IdTypeActivite")
                        .IsUnique();

                    b.ToTable("t_e_typeactivite_tat");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeChambre", b =>
                {
                    b.Property<int>("TypeChambreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeChambreId"));

                    b.Property<int>("TypeChambreCapacite")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_capacite");

                    b.Property<string>("TypeChambreDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tpc_description");

                    b.Property<string>("TypeChambreDimension")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tpc_dimension");

                    b.Property<string>("TypeChambreNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tpc_nom");

                    b.HasKey("TypeChambreId")
                        .HasName("pk_typechambre");

                    b.ToTable("t_e_typechambre_tpc");

                    b.HasCheckConstraint("ck_tpc_capacite", "tpc_capacite > 0");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeClient", b =>
                {
                    b.Property<int>("IdTypeClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpc_idtypeclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeClient"));

                    b.Property<string>("IntituleTypeClient")
                        .HasColumnType("varchar")
                        .HasColumnName("tpc_intituletypeclient");

                    b.HasKey("IdTypeClient")
                        .HasName("pk_typeclient");

                    b.HasIndex("IntituleTypeClient")
                        .IsUnique();

                    b.ToTable("t_e_typeclient_tpc");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeClub", b =>
                {
                    b.Property<int>("IdTypeClub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tcb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeClub"));

                    b.Property<string>("NomTypeClub")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tcb_nom");

                    b.HasKey("IdTypeClub")
                        .HasName("pk_typeclub");

                    b.HasIndex("IdTypeClub")
                        .IsUnique();

                    b.ToTable("t_e_typeclub_tcb");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeSignalement", b =>
                {
                    b.Property<int>("IdTypeSignalement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tsi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeSignalement"));

                    b.Property<string>("TitreTypeSignalement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tsi_titretype");

                    b.HasKey("IdTypeSignalement")
                        .HasName("pk_typesignalement");

                    b.ToTable("t_e_typesignalement_tsi");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Activite", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.TrancheAge", "TrancheageNavigation")
                        .WithMany("ActiviteNavigation")
                        .HasForeignKey("IdTrancheAge")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_activite_trancheage");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeActivite", "TypeactiviteNavigation")
                        .WithMany("ActiviteNavigation")
                        .HasForeignKey("IdTypeActivite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_activite_typeactivite");

                    b.Navigation("TrancheageNavigation");

                    b.Navigation("TypeactiviteNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.APourPf", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.PointFort", "PointfortNavigation")
                        .WithMany("ApourpfNavigation")
                        .HasForeignKey("IdPointFort")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apourpf_pointfort");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("ApourpfNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apourpf_typechambre");

                    b.Navigation("PointfortNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.APourSousLoc", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("ApoursouslocNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apoursousloc_club");

                    b.HasOne("APISAE401.Models.EntityFramework.SousLocalisation", "SouslocalisationNavigation")
                        .WithMany("ApoursouslocNavigation")
                        .HasForeignKey("IdSousLocalisation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_apoursousloc_souslocalisation");

                    b.Navigation("ClubNavigation");

                    b.Navigation("SouslocalisationNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Appartient", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("AppartientNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_appartient_club");

                    b.HasOne("APISAE401.Models.EntityFramework.DomaineSkiable", "DomaineskiableNavigation")
                        .WithMany("AppartientNavigation")
                        .HasForeignKey("IdDommaineSkiable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_appartient_domaineskiable");

                    b.Navigation("ClubNavigation");

                    b.Navigation("DomaineskiableNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Avi", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("AviNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avi_client");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("AviNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avi_club");

                    b.Navigation("ClientNavigation");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.AvoirComme", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.ServiceCommodite", "ServicecommoditeNavigation")
                        .WithMany("AvoircommeNavigation")
                        .HasForeignKey("IdServiceCommodite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avoircomme_servicecommodite");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("AvoircommeNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_avoircomme_typechambre");

                    b.Navigation("ServicecommoditeNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Bar", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("BarNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bar_club");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.TypeClient", "TypeclientNavigation")
                        .WithMany("ClientNavigation")
                        .HasForeignKey("IdTypeClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_client_typeclient");

                    b.Navigation("TypeclientNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Comptabiliser", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("ComptabiliserNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comptabiliser_club");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("ComptabiliserNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comptabiliser_typechambre");

                    b.Navigation("ClubNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Deplacer", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Reservation", "ReservationNavigation")
                        .WithMany("DeplacerNavigation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_deplacer_reservation");

                    b.HasOne("APISAE401.Models.EntityFramework.Transport", "TransportNavigation")
                        .WithMany("DeplacerNavigation")
                        .HasForeignKey("IdTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_deplacer_transport");

                    b.Navigation("ReservationNavigation");

                    b.Navigation("TransportNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.DesirReserve", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Reservation", "ReservationNavigation")
                        .WithMany("DesirereserveNavigation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_desirereserver_reservation");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("DesirereserveNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_desirereserve_typechambre");

                    b.Navigation("ReservationNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Detient", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.CarteBancaire", "CartebancaireNavigation")
                        .WithMany("DetientNavigation")
                        .HasForeignKey("IdCarteBancaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_detient_cartebancaire");

                    b.HasOne("APISAE401.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("DetientNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_detient_client");

                    b.Navigation("CartebancaireNavigation");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Disposer", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("DisposerNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_disposer_club");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeClub", "TypeclubNavigation")
                        .WithMany("DisposerNavigation")
                        .HasForeignKey("IdTypeClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_disposer_typeclub");

                    b.Navigation("ClubNavigation");

                    b.Navigation("TypeclubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Participer", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Participant", "ParticipantNavigation")
                        .WithMany("ParticiperNavigation")
                        .HasForeignKey("IdParticipant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participer_participant");

                    b.HasOne("APISAE401.Models.EntityFramework.Reservation", "ReservationNavigation")
                        .WithMany("ParticiperNavigation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participer_reservation");

                    b.Navigation("ParticipantNavigation");

                    b.Navigation("ReservationNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Photo", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Bar", "BarNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdBar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_bar");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_club");

                    b.HasOne("APISAE401.Models.EntityFramework.DomaineSkiable", "DomaineskiableNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdDomaineSkiable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_navigation");

                    b.HasOne("APISAE401.Models.EntityFramework.Restaurant", "RestaurantNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdRestaurant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_restaurant");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeActivite", "TypeactiviteNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdTypeActivite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_typeactivite");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("PhotoNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_photo_typechambre");

                    b.Navigation("BarNavigation");

                    b.Navigation("ClubNavigation");

                    b.Navigation("DomaineskiableNavigation");

                    b.Navigation("RestaurantNavigation");

                    b.Navigation("TypeactiviteNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Pouvoir", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Activite", "ActiviteNavigation")
                        .WithMany("PouvoirNavigation")
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pouvoir_activite");

                    b.HasOne("APISAE401.Models.EntityFramework.Reservation", "ReservationNavigation")
                        .WithMany("PouvoirNavigation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pouvoir_reservation");

                    b.Navigation("ActiviteNavigation");

                    b.Navigation("ReservationNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Proposer", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Activite", "ActiviteNavigation")
                        .WithMany("ProposerNavigation")
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_proposer_activite");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("ProposerNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_proposer_club");

                    b.Navigation("ActiviteNavigation");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Regrouper", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("RegrouperNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_regrouper_club");

                    b.HasOne("APISAE401.Models.EntityFramework.Regroupement", "RegroupementNavigation")
                        .WithMany("RegrouperNavigation")
                        .HasForeignKey("RegroupementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_regrouper_regroupement");

                    b.Navigation("ClubNavigation");

                    b.Navigation("RegroupementNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Reponse", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Avi", "AviNavigation")
                        .WithMany("ReponseNavigation")
                        .HasForeignKey("IdAvis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reponse_avis");

                    b.HasOne("APISAE401.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("ReponseNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reponse_client");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("ReponseNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reponse_club");

                    b.Navigation("AviNavigation");

                    b.Navigation("ClientNavigation");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Reservation", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Calendrier", "CalendrierdebutNavigation")
                        .WithMany("ReservationdatedebutNavigation")
                        .HasForeignKey("DateDebutCalendrier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reservation_calendrierdebut");

                    b.HasOne("APISAE401.Models.EntityFramework.Calendrier", "CalendrierfinNavigation")
                        .WithMany("ReservationdatefinNavigation")
                        .HasForeignKey("DateFinCalendrier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reservation_calendrierfin");

                    b.HasOne("APISAE401.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("ReservationNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reservation_client");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("ReservationNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reservation_club");

                    b.Navigation("CalendrierdebutNavigation");

                    b.Navigation("CalendrierfinNavigation");

                    b.Navigation("ClientNavigation");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Restaurant", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("RestaurantNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_restaurant_club");

                    b.Navigation("ClubNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.ServiceCommodite", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Commodite", "CommoditeNavigation")
                        .WithMany("ServicecommoditeNavigation")
                        .HasForeignKey("IdCommodite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servicecommodites_commodite");

                    b.Navigation("CommoditeNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Signalement", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Avi", "AviNavigation")
                        .WithMany("SignalementNavigation")
                        .HasForeignKey("IdAvis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_signalement_avi");

                    b.HasOne("APISAE401.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("SignalementNavigation")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_signalement_client");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("SignalementNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_signalement_club");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeSignalement", "TypesignalementNavigation")
                        .WithMany("SignalementNavigation")
                        .HasForeignKey("IdTypeSignalement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_signalement_typesignalement");

                    b.Navigation("AviNavigation");

                    b.Navigation("ClientNavigation");

                    b.Navigation("ClubNavigation");

                    b.Navigation("TypesignalementNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.SousLocalisation", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Localisation", "LocalisationNavigation")
                        .WithMany("SouslocalisationNavigation")
                        .HasForeignKey("loc_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_souslocalisation_localisation");

                    b.Navigation("LocalisationNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Tarif", b =>
                {
                    b.HasOne("APISAE401.Models.EntityFramework.Calendrier", "CalendrierNavigation")
                        .WithMany("TarifNavigation")
                        .HasForeignKey("DateCal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarif_calendrier");

                    b.HasOne("APISAE401.Models.EntityFramework.Club", "ClubNavigation")
                        .WithMany("TarifNavigation")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarif_club");

                    b.HasOne("APISAE401.Models.EntityFramework.TypeChambre", "TypechambreNavigation")
                        .WithMany("TarifNavigation")
                        .HasForeignKey("IdTypeChambre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarif_typechambre");

                    b.Navigation("CalendrierNavigation");

                    b.Navigation("ClubNavigation");

                    b.Navigation("TypechambreNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("PouvoirNavigation");

                    b.Navigation("ProposerNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Avi", b =>
                {
                    b.Navigation("ReponseNavigation");

                    b.Navigation("SignalementNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Bar", b =>
                {
                    b.Navigation("PhotoNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Calendrier", b =>
                {
                    b.Navigation("ReservationdatedebutNavigation");

                    b.Navigation("ReservationdatefinNavigation");

                    b.Navigation("TarifNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Navigation("DetientNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("AviNavigation");

                    b.Navigation("DetientNavigation");

                    b.Navigation("ReponseNavigation");

                    b.Navigation("ReservationNavigation");

                    b.Navigation("SignalementNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Club", b =>
                {
                    b.Navigation("ApoursouslocNavigation");

                    b.Navigation("AppartientNavigation");

                    b.Navigation("AviNavigation");

                    b.Navigation("BarNavigation");

                    b.Navigation("ComptabiliserNavigation");

                    b.Navigation("DisposerNavigation");

                    b.Navigation("PhotoNavigation");

                    b.Navigation("ProposerNavigation");

                    b.Navigation("RegrouperNavigation");

                    b.Navigation("ReponseNavigation");

                    b.Navigation("ReservationNavigation");

                    b.Navigation("RestaurantNavigation");

                    b.Navigation("SignalementNavigation");

                    b.Navigation("TarifNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Commodite", b =>
                {
                    b.Navigation("ServicecommoditeNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Navigation("AppartientNavigation");

                    b.Navigation("PhotoNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Localisation", b =>
                {
                    b.Navigation("SouslocalisationNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Participant", b =>
                {
                    b.Navigation("ParticiperNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.PointFort", b =>
                {
                    b.Navigation("ApourpfNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Regroupement", b =>
                {
                    b.Navigation("RegrouperNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Reservation", b =>
                {
                    b.Navigation("DeplacerNavigation");

                    b.Navigation("DesirereserveNavigation");

                    b.Navigation("ParticiperNavigation");

                    b.Navigation("PouvoirNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Restaurant", b =>
                {
                    b.Navigation("PhotoNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.ServiceCommodite", b =>
                {
                    b.Navigation("AvoircommeNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.SousLocalisation", b =>
                {
                    b.Navigation("ApoursouslocNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TrancheAge", b =>
                {
                    b.Navigation("ActiviteNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.Transport", b =>
                {
                    b.Navigation("DeplacerNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Navigation("ActiviteNavigation");

                    b.Navigation("PhotoNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeChambre", b =>
                {
                    b.Navigation("ApourpfNavigation");

                    b.Navigation("AvoircommeNavigation");

                    b.Navigation("ComptabiliserNavigation");

                    b.Navigation("DesirereserveNavigation");

                    b.Navigation("PhotoNavigation");

                    b.Navigation("TarifNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeClient", b =>
                {
                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeClub", b =>
                {
                    b.Navigation("DisposerNavigation");
                });

            modelBuilder.Entity("APISAE401.Models.EntityFramework.TypeSignalement", b =>
                {
                    b.Navigation("SignalementNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
